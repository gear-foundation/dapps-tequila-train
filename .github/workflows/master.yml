name: Build

on:
  push:
    branches: [master]

env:
  CARGO_TERM_COLOR: always
  CI: false
  NIGHTLY_TOOLCHAIN_VERSION: ${{ secrets.NIGHTLY_TOOLCHAIN_VERSION }}

jobs:
  build-contracts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Artifact cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            contracts -> target

      - name: Remove binaries from cache
        run: rm -vf contracts/target/wasm32-unknown-unknown/release/*.wasm

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy, rustfmt
          target: wasm32-unknown-unknown

      - name: Show specific nightly version
        if: ${{ env.NIGHTLY_TOOLCHAIN_VERSION != '' }}
        run: echo $NIGHTLY_TOOLCHAIN_VERSION | sed 's/-/ - /g'

      - name: Install specific nightly toolchain
        if: ${{ env.NIGHTLY_TOOLCHAIN_VERSION != '' }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-${{ env.NIGHTLY_TOOLCHAIN_VERSION }}
          components: clippy, rustfmt
          target: wasm32-unknown-unknown

      - name: Pin to specific nightly toolchain
        if: ${{ env.NIGHTLY_TOOLCHAIN_VERSION != '' }}
        run: |
          rm -rf ~/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu
          ln -s ~/.rustup/toolchains/nightly-$NIGHTLY_TOOLCHAIN_VERSION-x86_64-unknown-linux-gnu ~/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu

      - name: Build
        run: |
          make contracts
          cp contracts/tequila_train.meta.txt contracts/target/wasm32-unknown-unknown/release/

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: |
            contracts/target/wasm32-unknown-unknown/release/tequila_state.meta.wasm
            contracts/target/wasm32-unknown-unknown/release/tequila_train.opt.wasm
            contracts/target/wasm32-unknown-unknown/release/tequila_train.meta.txt

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install yarn
        run: sudo npm i yarn -g

      - name: Build
        run: |
          make init-frontend
          make frontend

      - name: Prepare artifacts
        run: |
          mkdir -p artifact
          cd frontend/build
          XZ_OPT=-9 tar -cvJf ../../artifact/frontend.tar.xz *

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ./artifact/*

  upload:
    runs-on: ubuntu-latest
    needs:
      - build-contracts
      - build-frontend
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Delete previous release
        uses: dev-drprasad/delete-tag-and-release@v0.2.1
        with:
          delete_release: true
          tag_name: build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          tag_name: build
          files: artifact/*
